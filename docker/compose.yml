services:
  next:
    image: soudis/pariti:latest
    restart: unless-stopped
    labels: # if using traefik
      - traefik.enable=true
      - traefik.http.routers.next.rule=Host(`${DOMAIN}`)
      - traefik.http.routers.next.entrypoints=websecure
      - traefik.http.services.next.loadbalancer.server.port=3000
    environment:
      HOSTNAME: 0.0.0.0
      TZ: ${TZ:-Europe/Berlin}
      DATABASE_URL: postgres://${DATABASE_USERNAME}:${DATABASE_PASSWORD}@db:5432/${DATABASE_NAME}?schema=public
      VIRTUAL_HOST: ${DOMAIN} # if using jwilder/nginx-proxy
      LETSENCRYPT_HOST: ${DOMAIN} # if using jrcs/letsencrypt-nginx-proxy-companion
    networks:
      - proxy_network
      - db_network
    command: node server.js

  db:
    image: postgres:15
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${DATABASE_USERNAME} -d $${DATABASE_NAME}"]
      interval: 60s
      timeout: 5s
      retries: 3
      start_period: 30s
      start_interval: 5s
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
      TZ: ${TZ:-Europe/Berlin}
    volumes:
      - db_data:/var/lib/postgresql/data/
    networks:
      - db_network


volumes:
  db_data:

networks:
  db_network:
  proxy_network:
    external: true
    name: ${PROXY_NETWORK}
